# contains functions to safely read config values
# https://unix.stackexchange.com/questions/175648/use-config-file-for-my-shell-script

#######################################
# Get specified config value from specified config file
# Arguments:
#   Config file name
#   Variable name
# Outputs:
#   Writes value of config variable to stdout
#######################################
config_read_file() {
    LINE=$(grep -E "^${2}=" -m 1 "${1}" 2>/dev/null || echo "VAR=__UNDEFINED__")
    echo "${LINE}" | head -n 1 | cut -d '=' -f 2-  # display value only
}

#######################################
# Get specified config value
# Description:
#   1. Looks for the value of a specified variable inside file config.cfg
#   2. If the variable isn't found, it looks for it in config.cfg.defaults
#   3. If the variable still isn't found, value = '__UNDEFINED__'
# Arguments:
#   Variable name
# Outputs:
#   Writes value of config variable to stdout
#######################################
config_get() {
    val="$(config_read_file config.cfg "${1}")";
    if [ "${val}" = "__UNDEFINED__" ]; then
        val="$(config_read_file config.cfg.defaults "${1}")";
    fi
    printf -- "%s" "${val}";
}
